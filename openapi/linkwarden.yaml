openapi: 3.0.2
info:
  description: Linkwarden API Documentation
  version: 1.0.0
  title: Linkwarden API
  license:
    name: GNU Affero General Public License v3.0
    url: "https://www.gnu.org/licenses/agpl-3.0.html"
tags:
  - name: Archives
  - name: Auth
  - name: Avatar
  - name: Collections
  - name: Dashboard
  - name: Links
  - name: Logins
  - name: Migration
  - name: Public
  - name: Session
  - name: Tags
  - name: Tokens
  - name: Users
servers:
  - url: https://cloud.linkwarden.app/api
paths:
  /v1/archives/{linkId}:
    post:
      tags:
        - Archives
      summary: Uploads a file to an archive by link ID
      parameters:
        - $ref: "#/components/parameters/LinkIdParameter"
        - name: format
          in: query
          required: true
          description: "The numeric value corresponding to the format of the file being uploaded: 0 = PNG, 1 = JPEG, 2 = PDF."
          schema:
            type: integer
            enum:
              - 0 # PNG
              - 1 # JPEG
              - 2 # PDF
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UploadFile"
      responses:
        "200":
          $ref: "#/components/responses/UploadSuccess"
        "400":
          $ref: "#/components/responses/BadRequest"
      security:
        - bearerAuth: []
      description: Uploads a file to the specified archive. Supports PDF, PNG, and JPEG formats.
    get:
      tags:
        - Archives
      summary: Retrieves an archive file by link ID
      parameters:
        - $ref: "#/components/parameters/LinkIdParameter"
        - name: format
          in: query
          required: false
          description: >
            The numeric value corresponding to the desired archive format:
            0 = PNG, 1 = JPEG, 2 = PDF, 3 = Readability JSON, 4 = Monolith HTML.
          schema:
            type: integer
            enum:
              - 0 # PNG
              - 1 # JPEG
              - 2 # PDF
              - 3 # Readability JSON
              - 4 # Monolith HTML
        - name: preview
          in: query
          required: false
          description: Indicates whether to return a preview of the archive.
          schema:
            type: boolean
      responses:
        "200":
          $ref: "#/components/responses/GetArchiveSuccess"
        "404":
          $ref: "#/components/responses/FileNotFound"
      security:
        - bearerAuth: []
      description: Retrieves an archive file in the specified format.
    put:
      tags:
        - Archives
      summary: Updates an archive file by link ID
      parameters:
        - $ref: "#/components/parameters/LinkIdParameter"
        - name: format
          in: query
          required: false
          description: >
            The numeric value corresponding to the desired archive format:
            0 = PNG, 1 = JPEG, 2 = PDF, 3 = Readability JSON, 4 = Monolith HTML.
          schema:
            type: integer
            enum:
              - 0 # PNG
              - 1 # JPEG
              - 2 # PDF
              - 3 # Readability JSON
              - 4 # Monolith HTML
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UploadFile"
      responses:
        "200":
          description: Archive file successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    description: Updated details of the archive.
        "400":
          description: Bad Request - Invalid file type, file too large, or permission issues.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: The error message describing why the request failed.
      security:
        - bearerAuth: []
      description: Updates an archive file by replacing the existing file. Supports PDF, PNG, and JPEG formats.
components:
  parameters:
    LinkIdParameter:
      name: linkId
      in: path
      required: true
      description: The ID of the desired link
      schema:
        type: string
  schemas:
    UploadFile:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: The file to upload (PNG, JPEG, or PDF).
      required:
        - file
    ReadabilityArchive:
      type: object
      properties:
        title:
          type: string
          description: The title of the content.
        byline:
          type: string
          description: The byline or author attribution.
        dir:
          type: string
          nullable: true
          description: The text direction (e.g., "ltr" or "rtl").
        lang:
          type: string
          nullable: true
          description: The language of the content.
        content:
          type: string
          description: The main content of the archive.
        length:
          type: integer
          description: The length of the content.
        excerpt:
          type: string
          description: A brief excerpt of the content.
        siteName:
          type: string
          nullable: true
          description: The name of the site hosting the content.
  responses:
    UploadSuccess:
      description: File successfully uploaded and processed.
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                type: object
                description: Details about the uploaded file.
    BadRequest:
      description: Bad Request - Invalid file type, file too large, or permission issues.
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                type: string
                description: The error message describing why the request failed.
    GetArchiveSuccess:
      description: Successful response with the requested archive format.
      content:
        application/pdf:
          schema:
            type: string
            format: binary
            description: The archive as a PDF file.
        image/png:
          schema:
            type: string
            format: binary
            description: The archive as a PNG image.
        image/jpeg:
          schema:
            type: string
            format: binary
            description: The archive as a JPEG image.
        application/json:
          schema:
            $ref: "#/components/schemas/ReadabilityArchive"
        text/html:
          schema:
            type: string
            description: The archive in "monolith" HTML format.
    FileNotFound:
      description: File not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                type: string
                example: "File not found."
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
