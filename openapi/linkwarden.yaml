openapi: 3.0.2
info:
  description: Linkwarden API Documentation
  version: 1.0.0
  title: Linkwarden API
  license:
    name: GNU Affero General Public License v3.0
    url: "https://www.gnu.org/licenses/agpl-3.0.html"
tags:
  - name: Archives
  - name: Auth
  - name: Avatar
  - name: Collections
  - name: Dashboard
  - name: Links
  - name: Logins
  - name: Migration
  - name: Public
  - name: Session
  - name: Tags
  - name: Tokens
  - name: Users
paths:
  /api/v1/archives/{linkId}:
    post:
      security:
        - bearerAuth: []
      tags:
        - Archives
      summary: Uploads a file to an archive by link ID
      parameters:
        - name: linkId
          in: path
          required: true
          description: The ID of the desired link
          schema:
            type: string
        - name: format
          in: query
          required: true
          description: "The numeric value corresponding to the format of the file being uploaded: 0 = PNG, 1 = JPEG, 2 = PDF."
          schema:
            type: integer
            enum:
              - 0 # PNG
              - 1 # JPEG
              - 2 # PDF
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload (PNG, JPEG, or PDF).
              required:
                - file
      responses:
        "200":
          description: File successfully uploaded and processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    description: Details about the uploaded file.
        "400":
          description: Bad request, invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: The error message describing why the request failed.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      description: Uploads a file to the specified archive. Supports PDF, PNG, and JPEG formats.
    get:
      security:
        - bearerAuth: []
      tags:
        - Archives
      summary: Retrieves an archive file by link ID
      parameters:
        - name: linkId
          in: path
          required: true
          description: The ID of the desired link
          schema:
            type: string
        - name: format
          in: query
          required: false
          description: >
            The numeric value corresponding to the desired archive format:
            0 = PNG, 1 = JPEG, 2 = PDF, 3 = Readability JSON, 4 = Monolith HTML.
          schema:
            type: integer
            enum:
              - 0 # PNG
              - 1 # JPEG
              - 2 # PDF
              - 3 # Readability JSON
              - 4 # Monolith HTML
        - name: preview
          in: query
          required: false
          description: Indicates whether to return a preview of the archive.
          schema:
            type: boolean
      responses:
        "200":
          description: Archive file retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    description: The archive file.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: The requested archive file was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
      description: Retrieves an archive file in the specified format.
    put:
      security:
        - bearerAuth: []
      tags:
        - Archives
      summary: Updates an archive file by link ID
      parameters:
        - name: linkId
          in: path
          required: true
          description: The ID of the desired link
          schema:
            type: string
        - name: format
          in: query
          required: false
          description: >
            The numeric value corresponding to the desired archive format:
            0 = PNG, 1 = JPEG, 2 = PDF, 3 = Readability JSON, 4 = Monolith HTML.
          schema:
            type: integer
            enum:
              - 0 # PNG
              - 1 # JPEG
              - 2 # PDF
              - 3 # Readability JSON
              - 4 # Monolith HTML
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload (PNG, JPEG, or PDF).
              required:
                - file
      responses:
        "200":
          description: Archive file successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    description: Updated details of the archive.
        "400":
          description: Bad request, invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: The error message describing why the request failed.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      description: Updates an archive file by replacing the existing file. Supports PDF, PNG, and JPEG formats.
  /api/v1/auth/forgot-password:
    post:
      tags:
        - Auth
      summary: Sends a password reset email to the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The email of the user requesting the password reset.
              required:
                - email
      responses:
        "200":
          description: Password reset email sent successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        "400":
          description: Invalid request or too many password reset requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        "404":
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
  /api/v1/auth/reset-password:
    post:
      tags:
        - Auth
      summary: Resets the password for a user using a valid token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The password reset token.
                password:
                  type: string
                  minLength: 8
                  description: The new password to set.
              required:
                - token
                - password
      responses:
        "200":
          description: Password has been reset successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        "400":
          description: Invalid token or error during password reset.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
  /api/v1/auth/verify-email:
    post:
      tags:
        - Auth
      summary: Verifies the user's email after they click a verification link
      parameters:
        - name: token
          in: query
          required: true
          description: The verification token sent to the user's email.
          schema:
            type: string
      responses:
        "200":
          description: Email verification successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        "400":
          description: Invalid token or email already in use.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
  /api/v1/avatar/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Avatar
      summary: Retrieves the avatar of a user by their ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user whose avatar is to be retrieved.
          schema:
            type: integer
      responses:
        "200":
          description: Avatar image successfully retrieved
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        "400":
          description: File inaccessible or invalid parameters
          content:
            text/plain:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
      description: Retrieves the avatar for a user identified by their ID.
  /api/v1/collections:
    get:
      security:
        - bearerAuth: []
      summary: Get all collections
      operationId: getAllCollections
      tags:
        - Collections
      responses:
        "200":
          description: List of collections successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the collection.
                        name:
                          type: string
                          description: The name of the collection.
                        description:
                          type: string
                          description: The description of the collection.
                        icon:
                          type: string
                          description: The icon of the collection.
                          nullable: true
                        iconWeight:
                          type: string
                          description: The weight of the collection's icon.
                          nullable: true
                        color:
                          type: string
                          description: The color of the collection.
                        parentId:
                          type: integer
                          description: The ID of the parent collection, if applicable.
                          nullable: true
                        isPublic:
                          type: boolean
                          description: Whether the collection is public.
                        ownerId:
                          type: integer
                          description: The ID of the owner of the collection.
                        createdById:
                          type: integer
                          description: The ID of the user who created the collection.
                        createdAt:
                          type: string
                          format: date-time
                          description: The creation timestamp of the collection.
                        updatedAt:
                          type: string
                          format: date-time
                          description: The last updated timestamp of the collection.
                        _count:
                          type: object
                          description: Count of related resources (e.g., links).
                          properties:
                            links:
                              type: integer
                              description: The count of associated links.
                        parent:
                          type: object
                          description: The parent collection, if applicable.
                          nullable: true
                        members:
                          type: array
                          items:
                            type: object
                          description: List of members associated with the collection.
                          default: []
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      security:
        - bearerAuth: []
      summary: Create a new collection
      operationId: createCollection
      tags:
        - Collections
      requestBody:
        description: The details of the collection to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the collection.
                description:
                  type: string
                  description: The description of the collection.
                color:
                  type: string
                  description: The color of the collection.
                icon:
                  type: string
                  description: The icon of the collection.
                iconWeight:
                  type: string
                  description: The weight of the collection's icon.
                parentId:
                  type: integer
                  description: The ID of the parent collection, if applicable.
      responses:
        "200":
          description: Collection successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    description: The created collection details.
                    properties:
                      id:
                        type: integer
                        description: The ID of the collection.
                      name:
                        type: string
                        description: The name of the collection.
                      description:
                        type: string
                        description: The description of the collection.
                      icon:
                        type: string
                        description: The icon of the collection.
                        nullable: true
                      iconWeight:
                        type: string
                        description: The weight of the collection's icon.
                        nullable: true
                      color:
                        type: string
                        description: The color of the collection.
                      parentId:
                        type: integer
                        description: The ID of the parent collection, if applicable.
                        nullable: true
                      isPublic:
                        type: boolean
                        description: Indicates if the collection is public.
                      ownerId:
                        type: integer
                        description: The ID of the owner of the collection.
                      createdById:
                        type: integer
                        description: The ID of the user who created the collection.
                      createdAt:
                        type: string
                        format: date-time
                        description: The creation timestamp of the collection.
                      updatedAt:
                        type: string
                        format: date-time
                        description: The last updated timestamp of the collection.
                      _count:
                        type: object
                        description: Count of related resources.
                        properties:
                          links:
                            type: integer
                            description: The count of associated links.
                      members:
                        type: array
                        items:
                          type: object
                        description: List of members associated with the collection.
                        default: []
        "400":
          description: Bad request, invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/collections/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Get a collection by ID
      operationId: getCollectionById
      tags:
        - Collections
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the collection to retrieve.
          schema:
            type: integer
      responses:
        "200":
          description: Collection successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    description: The collection details.
                    properties:
                      id:
                        type: integer
                        description: The ID of the collection.
                      name:
                        type: string
                        description: The name of the collection.
                      description:
                        type: string
                        description: The description of the collection.
                      icon:
                        type: string
                        description: The icon of the collection.
                        nullable: true
                      iconWeight:
                        type: string
                        description: The weight of the collection's icon.
                        nullable: true
                      color:
                        type: string
                        description: The color of the collection.
                      parentId:
                        type: integer
                        description: The ID of the parent collection, if applicable.
                        nullable: true
                      isPublic:
                        type: boolean
                        description: Whether the collection is public.
                      ownerId:
                        type: integer
                        description: The ID of the owner of the collection.
                      createdById:
                        type: integer
                        description: The ID of the user who created the collection.
                      createdAt:
                        type: string
                        format: date-time
                        description: The creation timestamp of the collection.
                      updatedAt:
                        type: string
                        format: date-time
                        description: The last updated timestamp of the collection.
                      _count:
                        type: object
                        description: Count of related resources (e.g., links).
                        properties:
                          links:
                            type: integer
                            description: The count of associated links.
                      members:
                        type: array
                        items:
                          type: object
                        description: List of members associated with the collection.
                        default: []
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
    delete:
      security:
        - bearerAuth: []
      summary: Delete a collection by ID
      operationId: deleteCollectionById
      tags:
        - Collections
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the collection to delete.
          schema:
            type: integer
      responses:
        "200":
          description: Collection successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    description: The deleted collection details.
                    properties:
                      id:
                        type: integer
                        description: The ID of the collection.
                      name:
                        type: string
                        description: The name of the collection.
                      description:
                        type: string
                        description: The description of the  collection.
                      icon:
                        type: string
                        description: The icon of the collection.
                        nullable: true
                      iconWeight:
                        type: string
                        description: The weight of the collection's icon.
                        nullable: true
                      color:
                        type: string
                        description: The color of the collection.
                      parentId:
                        type: integer
                        description: The ID of the parent collection, if applicable.
                        nullable: true
                      isPublic:
                        type: boolean
                        description: Whether the collection was public.
                      ownerId:
                        type: integer
                        description: The ID of the owner of the collection.
                      createdById:
                        type: integer
                        description: The ID of the user who created the collection.
                      createdAt:
                        type: string
                        format: date-time
                        description: The creation timestamp of the collection.
                      updatedAt:
                        type: string
                        format: date-time
                        description: The last updated timestamp of the collection.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
    put:
      security:
        - bearerAuth: []
      summary: Update an existing collection by ID
      operationId: updateCollection
      tags:
        - Collections
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the collection to update.
          schema:
            type: integer
      requestBody:
        description: The updated collection data.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the collection.
                description:
                  type: string
                  description: The description of the collection.
                color:
                  type: string
                  description: The color of the collection.
                icon:
                  type: string
                  description: The icon of the collection.
                iconWeight:
                  type: string
                  description: The weight of the collection's icon.
                parentId:
                  type: integer
                  description: The ID of the parent collection, if applicable.
                isPublic:
                  type: boolean
                  description: Whether the collection is public.
                members:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: integer
                      canCreate:
                        type: boolean
                      canUpdate:
                        type: boolean
                      canDelete:
                        type: boolean
      responses:
        "200":
          description: Collection successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    description: The updated collection details.
                    properties:
                      id:
                        type: integer
                        description: The ID of the collection.
                      name:
                        type: string
                        description: The name of the collection.
                      description:
                        type: string
                        description: The description of the collection.
                      icon:
                        type: string
                        description: The icon of the collection.
                        nullable: true
                      iconWeight:
                        type: string
                        description: The weight of the collection's icon.
                        nullable: true
                      color:
                        type: string
                        description: The color of the collection.
                      parentId:
                        type: integer
                        description: The ID of the parent collection, if applicable.
                        nullable: true
                      isPublic:
                        type: boolean
                        description: Whether the collection is public.
                      ownerId:
                        type: integer
                        description: The ID of the owner of the collection.
                      createdById:
                        type: integer
                        description: The ID of the user who created the collection.
                      createdAt:
                        type: string
                        format: date-time
                        description: The creation timestamp of the collection.
                      updatedAt:
                        type: string
                        format: date-time
                        description: The last updated timestamp of the collection.
                      _count:
                        type: object
                        description: Count of related resources (e.g., links).
                        properties:
                          links:
                            type: integer
                            description: The count of associated links.
                      members:
                        type: array
                        items:
                          type: object
                        description: List of members associated with the collection.
                        default: []
        "400":
          description: Bad request, invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/dashboard:
    get:
      security:
        - bearerAuth: []
      summary: Get dashboard data (v1)
      description: Retrieves the dashboard data for the authenticated user.
      operationId: getDashboard
      tags:
        - Dashboard
      responses:
        "200":
          description: Dashboard data successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    description: List of resources with associated collections.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the resource.
                        name:
                          type: string
                          description: The name of the resource.
                        type:
                          type: string
                          description: The type of resource (e.g., image, url).
                        description:
                          type: string
                          description: A brief description of the resource.
                        createdById:
                          type: integer
                          description: The ID of the user who created the resource.
                        collectionId:
                          type: integer
                          description: The ID of the associated collection.
                        icon:
                          type: string
                          nullable: true
                          description: The icon representing the resource.
                        iconWeight:
                          type: string
                          nullable: true
                          description: The weight of the icon.
                        color:
                          type: string
                          nullable: true
                          description: The color assigned to the resource.
                        url:
                          type: string
                          nullable: true
                          description: The URL associated with the resource (if applicable).
                        textContent:
                          type: string
                          nullable: true
                          description: The text content of the resource (if applicable).
                        preview:
                          type: string
                          nullable: true
                          description: The path to the resource's preview.
                        image:
                          type: string
                          nullable: true
                          description: The path to the resource's image.
                        pdf:
                          type: string
                          nullable: true
                          description: The path to the resource's PDF.
                        readable:
                          type: string
                          nullable: true
                          description: The path to the resource's readable JSON data.
                        monolith:
                          type: string
                          nullable: true
                          description: The monolith status or path of the resource.
                        lastPreserved:
                          type: string
                          format: date-time
                          description: The timestamp of the last preservation.
                        importDate:
                          type: string
                          format: date-time
                          nullable: true
                          description: The import date of the resource.
                        createdAt:
                          type: string
                          format: date-time
                          description: The creation timestamp of the resource.
                        updatedAt:
                          type: string
                          format: date-time
                          description: The last updated timestamp of the resource.
                        tags:
                          type: array
                          description: Tags associated with the resource.
                          items:
                            type: string
                        collection:
                          type: object
                          description: The collection to which the resource belongs.
                          properties:
                            id:
                              type: integer
                              description: The ID of the collection.
                            name:
                              type: string
                              description: The name of the collection.
                            description:
                              type: string
                              description: A brief description of the collection.
                            icon:
                              type: string
                              nullable: true
                              description: The icon representing the collection.
                            iconWeight:
                              type: string
                              nullable: true
                              description: The weight of the collection's icon.
                            color:
                              type: string
                              description: The color assigned to the collection.
                            parentId:
                              type: integer
                              nullable: true
                              description: The ID of the parent collection (if applicable).
                            isPublic:
                              type: boolean
                              description: Whether the collection is public.
                            ownerId:
                              type: integer
                              description: The ID of the user who owns the collection.
                            createdById:
                              type: integer
                              description: The ID of the user who created the collection.
                            createdAt:
                              type: string
                              format: date-time
                              description: The creation timestamp of the collection.
                            updatedAt:
                              type: string
                              format: date-time
                              description: The last updated timestamp of the collection.
                        pinnedBy:
                          type: array
                          description: A list of users who have pinned the resource.
                          items:
                            type: string
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v2/dashboard:
    get:
      security:
        - bearerAuth: []
      summary: Get dashboard data (v2)
      description: Retrieves the dashboard data for the authenticated user.
      operationId: getDashboardV2
      tags:
        - Dashboard
      responses:
        "200":
          description: Dashboard data successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      links:
                        type: array
                        description: List of links with detailed metadata.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the link.
                            name:
                              type: string
                              description: The name of the link.
                            type:
                              type: string
                              description: The type of the link (e.g., image, url).
                            description:
                              type: string
                              description: A brief description of the link.
                            createdById:
                              type: integer
                              description: The ID of the user who created the link.
                            collectionId:
                              type: integer
                              description: The ID of the associated collection.
                            icon:
                              type: string
                              nullable: true
                              description: The icon for the link.
                            iconWeight:
                              type: string
                              nullable: true
                              description: The weight of the icon.
                            color:
                              type: string
                              nullable: true
                              description: The color associated with the link.
                            url:
                              type: string
                              nullable: true
                              description: The URL for the link, if applicable.
                            textContent:
                              type: string
                              nullable: true
                              description: The text content of the link, if applicable.
                            preview:
                              type: string
                              nullable: true
                              description: The path to the link's preview.
                            image:
                              type: string
                              nullable: true
                              description: The path to the link's image.
                            pdf:
                              type: string
                              nullable: true
                              description: The path to the link's PDF.
                            readable:
                              type: string
                              nullable: true
                              description: The path to the link's readable content.
                            monolith:
                              type: string
                              nullable: true
                              description: The monolith status or path of the link.
                            lastPreserved:
                              type: string
                              format: date-time
                              description: The timestamp of the last preservation.
                            importDate:
                              type: string
                              format: date-time
                              nullable: true
                              description: The import date of the link.
                            createdAt:
                              type: string
                              format: date-time
                              description: The timestamp when the link was created.
                            updatedAt:
                              type: string
                              format: date-time
                              description: The timestamp when the link was last updated.
                            tags:
                              type: array
                              description: Tags associated with the link.
                              items:
                                type: string
                            collection:
                              type: object
                              description: The collection to which the link belongs.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the collection.
                                name:
                                  type: string
                                  description: The name of the collection.
                                description:
                                  type: string
                                  description: A brief description of the collection.
                                icon:
                                  type: string
                                  nullable: true
                                  description: The icon representing the collection.
                                iconWeight:
                                  type: string
                                  nullable: true
                                  description: The weight of the collection's icon.
                                color:
                                  type: string
                                  description: The color assigned to the collection.
                                parentId:
                                  type: integer
                                  nullable: true
                                  description: The ID of the parent collection, if applicable.
                                isPublic:
                                  type: boolean
                                  description: Whether the collection is public.
                                ownerId:
                                  type: integer
                                  description: The ID of the user who owns the collection.
                                createdById:
                                  type: integer
                                  description: The ID of the user who created the collection.
                                createdAt:
                                  type: string
                                  format: date-time
                                  description: The creation timestamp of the collection.
                                updatedAt:
                                  type: string
                                  format: date-time
                                  description: The last updated timestamp of the collection.
                            pinnedBy:
                              type: array
                              description: A list of users who have pinned the link.
                              items:
                                type: string
                      numberOfPinnedLinks:
                        type: integer
                        description: The total number of pinned links.
                  message:
                    type: string
                    description: A message describing the result.
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/logins:
    get:
      summary: Get login configuration
      description: Retrieves the login configuration for the application.
      operationId: getLoginConfiguration
      tags:
        - Logins
      responses:
        "200":
          description: Login configuration successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentialsEnabled:
                    type: string
                    nullable: true
                    description: Indicates if credentials-based login is enabled.
                  emailEnabled:
                    type: string
                    nullable: true
                    description: Indicates if email-based login is enabled.
                  registrationDisabled:
                    type: string
                    nullable: true
                    description: Indicates if registration is disabled.
                  buttonAuths:
                    type: array
                    description: List of available button-based authentication methods.
                    items:
                      type: object
                      properties:
                        method:
                          type: string
                          description: The method used for authentication.
                        name:
                          type: string
                          description: The name of the authentication method.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        response:
          type: string
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
